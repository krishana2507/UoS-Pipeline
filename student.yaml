---
openapi: 3.0.0
info:
  title: Student Information API
  description: "## Student information API "
  contact:
    email: integrationteam@sheffield.ac.uk
  version: 0.0.1
servers:
  - url: https://api.example.com/v1
tags:
  - name: GetStudents
    description: Get Students Information
paths:
  /students:
    get:
      tags:
        - GetStudents
      summary: Retrieve student information
      description: Returns a list of student information.
      operationId: getStudents
      parameters:
        - $ref: "#/components/parameters/AuthorizationHeader"
        - $ref: "#/components/parameters/ContentTypeHeader"
        - $ref: "#/components/parameters/CorrelationIdHeader"
        - $ref: "#/components/parameters/RequestIdHeader"
        - $ref: "#/components/parameters/TimestampHeader"
        - $ref: "#/components/parameters/TestHeader"
        - name: studentCode
          in: query
          description: Fields to include in the response
          required: true
          schema:
            type: string
          example: surname,enrollment.programme, programme
        - name: registrationNumber
          in: query
          description: Student registration number
          required: true
          schema:
            type: string
          example: 1122
        - name: registrationStatus
          in: query
          description: student registration status
          required: true
          schema:
            type: string
          example: active
        - name: fields
          in: query
          description: Fields to include in the response, currently not used.
          required: false
          schema:
            type: string
          example: surname,enrollment.programme, programme
      responses:
        "200":
          description: A list of student information.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Student"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error401"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error403"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error500"
      security:
        - bearerAuth:
            - uos/student-read
            - uos/student-read-all
        - apiKey: []
components:
  schemas:
    Student:
      type: object
      properties:
        title:
          type: integer
          description: The student's ID.
          example: 123
        forename:
          type: string
          description: The student's forename.
          example: Alice
        knownas:
          type: string
          description: The student's knownas name.
          example: John
        lastname:
          type: string
          description: The student's knownas name.
          example: John
        universityEmail:
          type: string
          format: email
          description: The student's university email.
          example: alice.smith@university.edu
        rvDomain:
          type: string
          description: The student's domain.
          example: REG_STATUS_GRP_ATT
    Error400:
      type: object
      required:
        - code
        - description
        - message
        - source
        - type
      properties:
        code:
          type: number
          description: 5 digit error message code
          example: 10000
          enum:
            - 10000
        description:
          type: string
          description: Description for the 5 digit  message code.
          example: Required fields are missing or invalid data specified in the request.
            Please refer to the API documentation for more details.
        source:
          type: string
          description: Source of the message
          example: Middleware
          enum:
            - Backend
            - Middleware
        message:
          type: string
          description: Any message for the consuming system for use in UI or in the
            application
          example: Invalid JSON
        type:
          type: string
          description: Type of the message
          example: Validation
          enum:
            - System
            - Business
            - Validation
    Error401:
      type: object
      required:
        - message
        - http_status_code
      properties:
        message:
          type: string
          description: Any message for the consuming system for use in UI or in the
            application
          example: Unauthorized - Expired Token.
        http_status_code:
          type: string
          description: HTTP response code
          example: "401"
    Error403:
      type: object
      required:
        - message
        - http_status_code
      properties:
        message:
          type: string
          description: Any message for the consuming system for use in UI or in the
            application
          example: API Key is not valid or is expired / revoked.
        http_status_code:
          type: string
          description: HTTP response code
          example: "403"
    Error500:
      type: object
      required:
        - code
        - description
        - message
        - source
        - type
      properties:
        code:
          type: number
          description: 5 digit  message code
          example: 20000
          enum:
            - 20000
        description:
          type: string
          description: Description for the 5 digit  message code.
          example: Internal Server Error
        source:
          type: string
          description: Source of the message
          example: Backend
          enum:
            - Backend
            - Middleware
        message:
          type: string
          description: Any message for the consuming system for use in UI or in the
            application
        type:
          type: string
          description: Type of the message
          example: System
          enum:
            - System
            - Business
            - Validation
  parameters:
    AuthorizationHeader:
      name: Authorization
      in: header
      required: true
      schema:
        type: string
        description: Bearer token for authentication
    ContentTypeHeader:
      name: Content-Type
      in: header
      required: true
      schema:
        type: string
        default: application/json
        enum:
          - application/json
          - application/xml
    CorrelationIdHeader:
      name: x-uos-correlation-id
      in: header
      required: true
      schema:
        type: string
        description: A unique identifier used by consumers or within the microservices
          layer in a business process journey.
    RequestIdHeader:
      name: x-uos-request-id
      in: header
      required: true
      schema:
        type: string
        description: A unique identifier for the API request.
    TimestampHeader:
      name: x-uos-timestamp
      in: header
      required: true
      schema:
        type: string
        description: Timestamp for when the API request was made.
        format: date-time
    TestHeader:
      name: x-uos-test
      in: header
      required: true
      schema:
        type: string
        description: Indicates whether the API request is a test or a live request.
        enum:
          - test
          - live
          - sandbox
          - production
  securitySchemes:
    bearerAuth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://example.com/oauth2/authorize
          scopes:
            uos/student-read: Read student information
            uos/student-read-all: Read all student information
    apiKey:
      type: apiKey
      in: header
      name: x-api-key
